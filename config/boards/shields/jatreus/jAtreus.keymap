#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        behaviors {
            bhm: balanced_homerow_mods {
                compatible = "zmk,behavior-hold-tap";
                label = "HOMEROW_MODS";
                #binding-cells = <2>;
                tapping-term-ms = <160>;
                quick-tap-ms = <0>;
                flavor = "balanced";
                bindings = <&kp>, <&kp>;
            };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// ------------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U  |  I  |  O  |  P  |
// |  A  |  S  |  D  |  F  |  G  |   |  H  |  J  |  K  |  L  |  ;  |
// |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M  |  ,  |  .  |  /  |
// | ESC |     |     | TAB | LWL |   | RSL | BSP |  -  |  '  | TAB |
//                           | ENT | SP |
                        bindings = <
  &kp Q         &kp W        &kp E       &kp R       &kp T   &kp Y     &kp U       &kp I       &kp O        &kp P   
  &bhm LSHFT A  &bhm LCTRL S &bhm LGUI D &bhm LALT F &kp G   &kp H     &bhm RALT J &bhm RGUI K &bhm RCTRL L &bhm RSHFT SEMI
  &kp Z         &kp X        &kp C       &kp V       &kp B   &kp N     &kp M       &kp COMMA   &kp DOT      &kp FSLH
  &kp ESC       &kp TAB      &none       &none       &none   &kp SPACE &kp BSPC    &kp MINUS   &kp APOS     &kp ENTER
                                                  &kp mo1 &kp mo2
                        >;
                };

                lower_layer {
// ------------------------------------------------------------------
// |  1  |  2  |  3  |  4  |  5  |   |  =  | CUT |  (  |  )  |  `  |
// |  6  |  7  |  8  |  9  |  0  |   |  \  | CPY |  {  |  }  |  "  |
// |SHFT |     |     |     |     |   | END | PST |  [  |  ]  | RSHF|
// | ESC |     |     |     |     |   | ADJ | DEL |  _  |     |     |
//                           |     |    |
                        bindings = <
  &kp N1    &kp N2 &kp N3 &kp N4 &kp N5 &kp EQUAL   &kp RG(X) &kp LPAR  &kp RPAR &kp GRAVE   
  &kp N6    &kp N7 &kp N8 &kp N9 &kp N0 &kp BSLH    &kp RG(C) &kp LBRC  &kp RBRC &kp DQT
  &kp LSHFT &none  &none  &none  &none  &kp END     &kp RG(V) &kp COMMA &kp DOT  &kp RSHFT
  &none     &none  &none  &none  &none  &none       &kp DEL   &kp UNDER &none    &none
                                             &none &mo 3
                        >;
                };

                raise_layer {
// ------------------------------------------------------------------
// | CPS | MPV | PLY | MNX |     |   | PUP |  F1 |  F2 |  F3 |  F4 |
// | LFT | DWN | UP  | LFT |     |   | PDW |  F5 |  F6 |  F7 |  F8 |
// |SHFT | MTE | VL- | VL+ |HOME |   |     |  F9 | F10 | F11 | F12 |
// |     |     |     |     |     |   |     |     |     |     |     |
//                            |    |    |
                        bindings = <
  &kp CAPS  &kp C_PREV &kp C_PP     &kp C_NEXT   &none      &kp PG_UP &kp F1 &kp F2  &kp F3  &kp F4   
  &kp LEFT  &kp DOWN   &kp UP       &kp RIGHT    &none      &kp PG_DN &kp F5 &kp F6  &kp F7  &kp F8
  &kp LSHFT &kp C_MUTE &kp C_VOL_DN &kp C_VOL_UP &kp HOME   &none     &kp F9 &kp F10 &kp F11 &kp F12
  &none     &none      &none        &kp TAB      &none      &trans    &none  &none   &none   &none
                                                     &mo 3 &none
                        >;
                };

                adjust_layer {
                        bindings = <
  &none       &none      &none      &none      &none   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_CLR  
  &kp RA(N1)  &kp RA(N2) &kp RA(N3) &kp RA(N4) &none   &none        &kp RA(N5)   &kp RA(N6)   &kp RA(N7)   &kp RA(N8) 
  &none       &none      &none      &none      &none   &none        &none        &none        &none        &none
  &none       &none      &none      &none      &none   &none        &none        &none        &none        &bootloader
                                               &none   &none
                        >;
                };
        };
};
